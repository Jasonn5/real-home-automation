{"uid":"caae98258c4e64de","name":"test_post_advisor_with_minimum_fields","fullName":"tests.advisor.test_post_advisor#test_post_advisor_with_minimum_fields","historyId":"e2cab0dcf9faa450fb63462c2dc553e5","time":{"start":1726286477462,"stop":1726286479509,"duration":2047},"status":"failed","statusMessage":"AssertionError: Expected status code 201 but got 400. Error message: No error message provided","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f5ee76b8e00>\nminimum_valid_advisor_payload = {'email': 'test_user_1726286458@example.com', 'firstName': 'Pedro', 'lastName': 'Gonzales', 'user': {'confirmPassword'...email': 'test_user_1726286458@example.com', 'password': 'Prueba.321!', 'username': 'test_user_1726286458@example.com'}}\n\n    @allure.suite('Crate advisor Account')\n    @allure.epic('Advisor')\n    @allure.feature('Crate advisor Account')\n    @allure.story('Post advisor With Minimum Valid Fields')\n    @allure.tag('author: Jeyson')\n    @pytest.mark.functional\n    @pytest.mark.positive\n    @pytest.mark.regression\n    def test_post_advisor_with_minimum_fields(get_headers, minimum_valid_advisor_payload):\n        url = AdvisorEndpoints.create_advisor()\n        headers = Auth().auth_valid_credential(get_headers)\n        response = RealHomeRequest.post(url, headers, minimum_valid_advisor_payload)\n    \n>       assert_status_code_created(response)\n\ntests/advisor/test_post_advisor.py:192: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [400]>\n\n    def assert_status_code_created(response):\n>       assert response.status_code == 201, f\"Expected status code 201 but got {response.status_code}. Error message: {extract_error_message(response)}\"\nE       AssertionError: Expected status code 201 but got 400. Error message: No error message provided\n\ncore/assertions/status_code.py:5: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"unique_user_data","time":{"start":1726286458986,"stop":1726286458986,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_headers","time":{"start":1726286477462,"stop":1726286477462,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"minimum_valid_advisor_payload","time":{"start":1726286477462,"stop":1726286477462,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"story","value":"Post advisor With Minimum Valid Fields"},{"name":"suite","value":"Crate advisor Account"},{"name":"tag","value":"author: Jeyson"},{"name":"epic","value":"Advisor"},{"name":"feature","value":"Crate advisor Account"},{"name":"tag","value":"regression"},{"name":"tag","value":"positive"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.advisor"},{"name":"host","value":"fv-az654-931"},{"name":"thread","value":"2099-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.advisor.test_post_advisor"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["functional","regression","author: Jeyson","positive"]},"source":"caae98258c4e64de.json","parameterValues":[]}