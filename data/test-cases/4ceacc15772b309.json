{"uid":"4ceacc15772b309","name":"test_get_advisor_without_authentication","fullName":"tests.Advisor.test_find_advisor_by_id#test_get_advisor_without_authentication","historyId":"bec34501b2ddf65c92489f8340e77c50","time":{"start":1726183190356,"stop":1726183190918,"duration":562},"status":"failed","statusMessage":"AssertionError: Expected status code 401 but got 200. Error message: No error message provided","statusTrace":"@allure.suite('Advisor')\n    @allure.epic('Get Advisor By ID')\n    @allure.feature('Advisor')\n    @allure.story('Unauthorized Access to Get Advisor')\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.smoke\n    def test_get_advisor_without_authentication():\n        advisor_id = 1\n        url = f\"{AdvisorEndpoints.get_advisor_by_id(advisor_id)}\"\n        response = RealHomeRequest.get_with_url(url)\n    \n>       assert_status_code_unauthorized(response)\n\ntests/Advisor/test_find_advisor_by_id.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    def assert_status_code_unauthorized(response):\n>       assert response.status_code == 401, f\"Expected status code 401 but got {response.status_code}. Error message: {extract_error_message(response)}\"\nE       AssertionError: Expected status code 401 but got 200. Error message: No error message provided\n\ncore/assertions/status_code.py:14: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"epic","value":"Get Advisor By ID"},{"name":"feature","value":"Advisor"},{"name":"story","value":"Unauthorized Access to Get Advisor"},{"name":"suite","value":"Advisor"},{"name":"tag","value":"smoke"},{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.Advisor"},{"name":"host","value":"fv-az1108-921"},{"name":"thread","value":"2055-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.Advisor.test_find_advisor_by_id"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["negative","functional","smoke"]},"source":"4ceacc15772b309.json","parameterValues":[]}