{"uid":"e0b02b7ab73299fc","name":"test_list_advisors_unauthorized_access","fullName":"tests.Advisor.test_list_advisors#test_list_advisors_unauthorized_access","historyId":"add18b623be7a5b9ab2b98a565890e4e","time":{"start":1726142537534,"stop":1726142539428,"duration":1894},"status":"broken","statusMessage":"AttributeError: 'list' object has no attribute 'get'","statusTrace":"@allure.suite('Advisor')\n    @allure.epic('List Advisors')\n    @allure.feature('Advisor')\n    @allure.story('Unauthorized Access - List Advisors')\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.smoke\n    def test_list_advisors_unauthorized_access():\n        url = AdvisorEndpoints.get_advisors()\n        response = RealHomeRequest.get_with_url(url)\n    \n>       assert_status_code_unauthorized(response)\n\ntests/Advisor/test_list_advisors.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ncore/assertions/status_code.py:14: in assert_status_code_unauthorized\n    assert response.status_code == 401, f\"Expected status code 401 but got {response.status_code}. Error message: {extract_error_message(response)}\"\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    def extract_error_message(response):\n        try:\n>           error_info = response.json().get('error', {})\nE           AttributeError: 'list' object has no attribute 'get'\n\ncore/assertions/status_code.py:39: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"afterStages":[],"labels":[{"name":"suite","value":"Advisor"},{"name":"feature","value":"Advisor"},{"name":"story","value":"Unauthorized Access - List Advisors"},{"name":"epic","value":"List Advisors"},{"name":"tag","value":"smoke"},{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.Advisor"},{"name":"host","value":"fv-az1535-406"},{"name":"thread","value":"2072-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.Advisor.test_list_advisors"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["negative","functional","smoke"]},"source":"e0b02b7ab73299fc.json","parameterValues":[]}