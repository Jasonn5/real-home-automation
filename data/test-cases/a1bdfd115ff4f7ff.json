{"uid":"a1bdfd115ff4f7ff","name":"test_find_advisor_by_invalid_email_format","fullName":"tests.advisor.test_find_advisor_by_email#test_find_advisor_by_invalid_email_format","historyId":"d4a6a50cc73f0abb6845f03f6cb985f1","time":{"start":1729992252798,"stop":1729992254267,"duration":1469},"status":"skipped","statusMessage":"XFAIL This test case is expected to fail due to known issue.\n\nAssertionError: Expected status code 400 but got 500. Error message: El asesor con ese Email no exite","statusTrace":"get_headers = <function get_headers.<locals>._get_headers at 0x7f9b41a36de0>\n\n    @allure.suite('Find advisor By Email')\n    @allure.epic('Advisor')\n    @allure.feature('Find advisor By Email')\n    @allure.story('Find advisor by Invalid Email Format')\n    @allure.tag('author: Jeyson')\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.regression\n    @pytest.mark.xfail(reason=\"This test case is expected to fail due to known issue.\",condition=True)\n    def test_find_advisor_by_invalid_email_format(get_headers):\n        invalid_email = \"invalid-email\"\n        url = f\"{AdvisorEndpoints.get_advisor_by_email(invalid_email)}\"\n        headers = Auth().auth_valid_credential(get_headers)\n        response = RealHomeRequest.get_with_url_headers(url, headers)\n    \n>       assert_status_code_bad_request(response)\n\ntests/advisor/test_find_advisor_by_email.py:57: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>\n\n    def assert_status_code_bad_request(response):\n>       assert response.status_code == 400, f\"Expected status code 400 but got {response.status_code}. Error message: {extract_error_message(response)}\"\nE       AssertionError: Expected status code 400 but got 500. Error message: El asesor con ese Email no exite\n\ncore/assertions/status_code.py:20: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_headers","time":{"start":1729992252798,"stop":1729992252798,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"author: Jeyson"},{"name":"suite","value":"Find advisor By Email"},{"name":"epic","value":"Advisor"},{"name":"feature","value":"Find advisor By Email"},{"name":"story","value":"Find advisor by Invalid Email Format"},{"name":"tag","value":"@pytest.mark.xfail(reason='This test case is expected to fail due to known issue.', condition=True)"},{"name":"tag","value":"regression"},{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.advisor"},{"name":"host","value":"fv-az1393-92"},{"name":"thread","value":"2091-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.advisor.test_find_advisor_by_email"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["negative","functional","regression","author: Jeyson","@pytest.mark.xfail(reason='This test case is expected to fail due to known issue.', condition=True)"]},"source":"a1bdfd115ff4f7ff.json","parameterValues":[]}